# Command/action pairings for akizuki.
# Right now let's just stick with text reactions.

# Format for orders
# [order name]:
#     cl: [trigger words or phrases that will be preceded by the command prefix to call `akizuki`, separated by commas and enclosed by brackets]
#     do: [what akizuki will do when this command is called. in orders.yaml, this should only be text strings.]
#     tr: [format for terms to follow the command in helptext. this should generally be left blank.]
#     of: [helptext explaining what the command does.]

# If you want to add more, make sure to follow the format of [key: text]. 
# Do not follow a key with `, eg "of: `akizuki`" as that doesn't work for some reason.
# Remember to precede ' and " with \ as these strings will have to pass through python/yaml syntax before reaching users.

# Kancolle commands
improvements:
    cl: [improvements, improvement, improve, akashi]
    do: http://akashi-list.me/
    tr: 
    of: Returns the url for `akashi-list.me`

wikiwiki:
    cl: [wikiwiki]
    do: http://wikiwiki.jp/kancolle/
    tr: 
    of: Returns the url for the Japanese Kancolle wikiwiki

galstars:
    cl: [galstars]
    do: http://unlockacgweb.galstars.net/Kancollewiki/viewCreateShipLogList
    tr: 
    of: Returns the url for the galstars wiki, a database for construction recipe rates.

kancolle-db:
    cl: [kancolle-db, kcdb]
    do: http://kancolle-db.net/
    tr: 
    of: Returns the url for `kancolle-db`, a database for construction recipe and drop rates.

poi-stats:
    cl: [poi-stats, poi-statistics]
    do: http://db.kcwiki.moe/drop/
    tr: 
    of: Returns the url for poi-stats, a database for drop rates.

kc3:
    cl: [kc3, kc3kai]
    do: https://github.com/KC3Kai/KC3Kai
    tr: 
    of: Returns the Github page for KC3 Kai.

poi-viewer:
    cl: [poi-viewer, poooi]
    do: https://github.com/poooi/poi
    tr: 
    of: Returns the Github page for Poi viewer.

gakada:
    cl: [gakada]
    do: https://github.com/gakada/KanColleViewer
    tr: 
    of: Returns the Github page for gakada's fork of KanColleViewer.

kcv:
    cl: [kcv]
    do: https://github.com/Yuubari/KanColleViewer
    tr: 
    of: Returns the Github page for Yuubari's fork of KanColleViewer.

twitch:
    cl: [twitch, streams]
    do: https://www.twitch.tv/directory/game/Kantai%20Collection
    tr: 
    of: Returns the url for the Kantai Collection page on Twitch.



# memes
poi:
    cl: [poi]
    do: http://anohito.tw/poi/
    tr: 
    of: Poi!

orel:
    cl: [orel]
    do: https://www.youtube.com/watch?v=PKQl39epgmo
    tr: 
    of: Mutsu ni naru~


# meta commands
info:
    cl: [info]
    do: This is the Summer 2016 beta test of `akizuki`, an open-source Kancolle helper bot for Discord developed primarily by Storian Logi.
    tr: 
    of: Gives basic information on `akizuki`.

repo:
    cl: [repo, github, source]
    do: https://github.com/StorianLogi/akizuki/
    tr: 
    of: Returns the Github repository for `akizuki`.

credits:
    cl: [credit, credits]
    do: Credit to ComoNaD for teaching Logi how to write in Python, the members of Nasujima Anchorage for helping to run and bugtest `akizuki`, and ridomiridoriyo for inspiring this project by creating the first widely implemented Kancolle bot for Discord.
    tr: 
    of: Recognizes a few people for their contributions to this `akizuki` beta.
